version: '3.8'
services:
  dynamodb-local:
    image: "amazon/dynamodb-local:latest"
    container_name: dynamodb-local
    ports:
      - "8002:8002"
    volumes:
      - "./docker/dynamodb:/home/dynamodblocal/data"
    working_dir: /home/dynamodblocal
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data -port 8002"
    networks:
      - my-network

  aggregator-service:
    container_name: aggregator-service
    image: aggregator-service:latest
    ports:
      - "8088:8088"
    environment:
      - SERVER_PORT=8088
      - SPRING_PROFILES_ACTIVE=dev
      - ENV=dev
    networks:
      - my-network
    command: ./mvnw spring-boot:run -Dspring-boot.run.jvmArguments="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:8001"

  composite-service:
    container_name: composite-service
    hostname: composite-service
    image: composite-service:latest
    ports:
      - "8086:8086"
    environment:
      - SERVER_PORT=8086
      - SPRING_PROFILES_ACTIVE=dev
      - ENV=dev
      - AWS_DYNAMODB_ENDPOINT=http://dynamodb-local:8002
      - AWS_ACCESS_KEY_ID=foo
      - AWS_SECRET_ACCESS_KEY=bar
      - AWS_REGION=eu-north-1
    networks:
      - my-network
    command: ./mvnw spring-boot:run -Dspring-boot.run.jvmArguments="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:8001"


  content-service:
    container_name: content-service
    hostname: content-service
    image: content-service:latest
    ports:
      - "8085:8085"
    environment:
      - SERVER_PORT=8085
      - SPRING_PROFILES_ACTIVE=dev
      - ENV=dev
      - AWS_DYNAMODB_ENDPOINT=http://dynamodb-local:8002
      - AWS_ACCESS_KEY_ID=foo
      - AWS_SECRET_ACCESS_KEY=bar
      - AWS_REGION=eu-north-1
    networks:
      - my-network
    command: ./mvnw spring-boot:run -Dspring-boot.run.jvmArguments="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:8001"

networks:
  my-network:
    driver: bridge

volumes:
  dynamodb_data: